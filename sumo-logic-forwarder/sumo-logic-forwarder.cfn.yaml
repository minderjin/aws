Description: github.com/theaaf/aws
Parameters:
  CollectorURL:
    Type: String
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: dead-letter-queue
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: sqs:*
                Resource:
                  - !GetAtt DeadLetterQueue.Arn
              - Effect: Allow
                Action:
                  - sqs:ListQueues
                Resource: '*'
  DeadLetterInvokePolicy:
    Type: AWS::IAM::Policy
    Properties:
        PolicyName: invoke-dead-letter-function
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: lambda:InvokeFunction
              Resource: !GetAtt DeadLetterFunction.Arn
        Roles:
          - !Ref LambdaRole
  DeadLetterQueue:
    Type: AWS::SQS::Queue
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub appdevzipfiles-${AWS::Region}
        S3Key: cloudwatchlogs-with-dlq.zip
      DeadLetterConfig:
        TargetArn: !GetAtt DeadLetterQueue.Arn
      Environment:
        Variables:
          INCLUDE_LOG_INFO: 'true'
          LOG_FORMAT: 'Others'
          SUMO_ENDPOINT: !Ref CollectorURL
      Handler: cloudwatchlogs_lambda.handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs8.10
      Timeout: 300
  DeadLetterEvent:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(5 minutes)
      Targets:
        - Arn: !GetAtt DeadLetterFunction.Arn
          Id: !Ref DeadLetterFunction
  DeadLetterEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DeadLetterFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DeadLetterEvent.Arn
  DeadLetterFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub appdevzipfiles-${AWS::Region}
        S3Key: cloudwatchlogs-with-dlq.zip
      DeadLetterConfig:
        TargetArn: !GetAtt DeadLetterQueue.Arn
      Environment:
        Variables:
          INCLUDE_LOG_INFO: 'true'
          LOG_FORMAT: 'Others'
          NUM_OF_WORKERS: '4'
          SUMO_ENDPOINT: !Ref CollectorURL
          TASK_QUEUE_URL: !Ref DeadLetterQueue
      Handler: DLQProcessor.handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs8.10
      Timeout: 300
